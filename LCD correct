#include<REG51.h>

#define Enable 0x08
#define RS 0x04

void DelayMs(delay)
{
int i,j;
	for(i=0;i<delay;i++)
	{
	 for(j=0;j<100;j++);
	}
}

void write_lcd_data(value)
{
   	/* data for lcd  */
	P0 = value;
	DelayMs(5);
	P3 = Enable | RS ;
	DelayMs(1);
	P3 =00;
}

void write_lcd_command(value)
{
 /* command for lcd */

	P0 =  value;
	DelayMs(10);
	P3 = Enable;
	DelayMs(1);
	P3 =00;
}

void blink_display()
{
	  /* function set for lcd */
  write_lcd_command(0x08); //display off
  DelayMs(600);
  write_lcd_command(0x0F); //display on
  DelayMs(600);

}

void main(void)
{
P0 = 0x00;
P3 = 0x00;

 write_lcd_command(0x38); //function set

 write_lcd_command(0x08); //display off

 write_lcd_command(0x01); //display clear

 write_lcd_command(0x06); //entry mode set
 
 write_lcd_command(0x0F); //display on 

 write_lcd_command(0x80); //set address counter value

write_lcd_data('E');
write_lcd_data('N');
write_lcd_data('T');
write_lcd_data('C');
write_lcd_data('_');
write_lcd_data('D');
write_lcd_data('E');
write_lcd_data('P');
write_lcd_data('A');
write_lcd_data('R');
write_lcd_data('T');
write_lcd_data('M');
write_lcd_data('E');
write_lcd_data('N');
write_lcd_data('T');
while(1)
{
	blink_display();
}

}
